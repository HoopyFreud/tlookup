[
  {
    "Name": "The Fool",
    "Suit": "Major Arcana",
    "Number": 0,
    "Keyword": "Beginnings",
    "Text": [
      "Freedom from conventions and norms. Something or someone unique and exceptional. Options kept open. Giving up control, spontaneity. Uncertainty, attention to the here and now. Going on a trip.",
      {
        "Message": "Keep on the move."
      },
      {
        "Inverse": "Difficulty in choosing and committing oneself to something stable. Restlessness. Lack of purpose. Getting lost. Foolish behavior. Eccentricity, lack of acceptance by the social environment. Difficulty in planning ahead."
      }
    ]
  },
  {
    "Name": "The Magician",
    "Suit": "Major Arcana",
    "Number": 1,
    "Keyword": "Potential",
    "Text": [
      "The start of something. Beginner’s luck. Having various tools and means at our disposal. Use of supernatural forces. Creating reality with mind power. Training and acquisition of practical skills. Improvisation. Display or show for other people.",
      {
        "Message": "Create a new reality."
      },
      {
        "Inverse": "Trickery, sleight of hand, cheating. Showing off, pretending. Lack of self-awareness about body, sexuality, or basic motives. Near miss due to inexperience or inaccuracy."
      }
    ]
  },
  {
    "Name": "The High Priestess",
    "Suit": "Major Arcana",
    "Number": 2,
    "Keyword": "Wisdom",
    "Text": [
      "Wisdom combining intellect and intuition. A spiritual mother. A woman hiding her strengths in a world of men. Modesty. Secrets, something hidden, mystery. Getting a hint of something which remains largely unknown. Impossible to give a definite answer now.",
      {
        "Message": "Know how to set boundaries."
      },
      {
        "Inverse": "Need to hide our true nature behind the conventions of normal society. Conservative approach to sex and the body. Emotional blockage."
      }
    ]
  },
  {
    "Name": "The Empress",
    "Suit": "Major Arcana",
    "Number": 3,
    "Keyword": "Vitality",
    "Text": [
      "Abundance, growth, productivity. Natural or human touch within an artificial framework. Emotional intelligence. Protection and care. Motherhood. A powerful female figure. Strong feminine identity.",
      {
        "Message": "Act from the guts."
      },
      {
        "Inverse": "Impulsive behavior, someone difficult to reason with. Overprotectiveness, excessive involvement in the life of others. Problems with a strong mother figure."
      }
    ]
  },
  {
    "Name": "The Emperor",
    "Suit": "Major Arcana",
    "Number": 4,
    "Keyword": "Authority",
    "Text": [
      "Practical and material achievements. Matters relating to the workplace or source of income. Authority and control, a commanding position. A protective father figure, patron or sponsor. Assertiveness. Military affairs.",
      {
        "Message": "Show leadership and responsibility."
      },
      {
        "Inverse": "Belligerence, violence, trying to solve things by brute force. Dictatorship. Possibility of sexual abuse. Difficulty in coping with a dominant father figure. Denial and hiding of inner weaknesses."
      }
    ]
  },
  {
    "Name": "The Herophant",
    "Suit": "Major Arcana",
    "Number": 5,
    "Keyword": "Erudition",
    "Text": [
      "Teacher, instructor, or counselor. Education and knowledge, academic expertise. Organized religion, conventional medicine or psychology. Spiritual father. Consultation or treatment by a specialist. Marriage.",
      {
        "Message": "Respect knowledge and education."
      },
      {
        "Inverse": "Excessive adhesion to conventions and outdated norms. Bureaucracy, an oppressive establishment. Hypocrisy, discrimination. Divorce."
      }
    ]
  },
  {
    "Name": "The Lovers",
    "Suit": "Major Arcana",
    "Number": 6,
    "Keyword": "Intimacy",
    "Text": [
      "Love, amorous relationship. Emotional entanglement. Need to make a choice, or to disengage oneself from past influences. Inclinations of the heart correspond to the will of heaven. Small steps actually taken are the visible signs of inner desire.",
      {
        "Message": "Follow the path of the heart."
      },
      {
        "Inverse": "Complex relationship between several people, e.g., a romantic triangle or a tension between mother and wife. Hesitation, quandary. Confusion as to one’s own feeling and will."
      }
    ]
  },
  {
    "Name": "The Chariot",
    "Suit": "Major Arcana",
    "Number": 7,
    "Keyword": "Triumph",
    "Text": [
      "Victory or an achievement putting the querent in a strong and protected position. Ambition, energy, motivation to move forward. Public honor. Power and high status.",
      {
        "Message": "Dare and win."
      },
      {
        "Inverse": "Inner weakness hidden behind external show-off. Arrogance, vanity. Over-protectiveness, emotional closure. Confusion about one’s goals. Losing the simple touch with people and reality."
      }
    ]
  },
  {
    "Name": "Justice",
    "Suit": "Major Arcana",
    "Number": 8,
    "Keyword": "Fairness",
    "Text": [
      "Law and order, legal and court issues. A fair and balanced judgment. A developed conscience. Rationality, reasoning by clear rules and common norms. Touch of grace and humanity beyond the objective considerations.",
      {
        "Message": "Act with reason and by the accepted norms."
      },
      {
        "Inverse": "Petty accountability, a critical and judgmental attitude, guilt feelings. Repressive control of self and of others. Negative ideas blocking change and advance."
      }
    ]
  },
  {
    "Name": "The Hermit",
    "Suit": "Major Arcana",
    "Number": 9,
    "Keyword": "Contemplation",
    "Text": [
      "A quest for truth or for spiritual understanding. Concentrating on a clear purpose. Caution, careful examination. Self-privation for the sake of a meaningful cause. Loyalty to principles, strong faith.",
      {
        "Message": "Look for the essence of things."
      },
      {
        "Inverse": "A closed and reclusive attitude. Isolation, loneliness. Fixed ideas. Excessive caution and suspicion, a critical approach looking for defects. Hidden and denied desires."
      }
    ]
  },
  {
    "Name": "The Wheel of Fortune",
    "Suit": "Major Arcana",
    "Number": 10,
    "Keyword": "Progress",
    "Text": [
      "Change in circumstances and position. A rise after a fall. Gambling, putting faith in capricious luck. Life cycles, closure of circles. Adapting to the routine of everyday life. A hint to previous incarnations.",
      {
        "Message": "Accept life’s ups and downs."
      },
      {
        "Inverse": "A decline after a period of rising. Danger lurks at the summit. Moving in a closed circle. Capricious mood changes. Feeling powerless to affect one’s situation."
      }
    ]
  },
  {
    "Name": "Force",
    "Suit": "Major Arcana",
    "Number": 11,
    "Keyword": "Power",
    "Text": [
      "Power and courage to face challenges. Controlled expression of creative urges, drives and desires. Mobilization of inner resources towards a common goal. Taking risks.",
      {
        "Message": "Take control of yourself."
      },
      {
        "Inverse": "Need to keep things under control leads to constant tensions. A risk of losing one’s grip. Internal conflicts and unrealistic assessment of one’s own forces may lead to failure."
      }
    ]
  },
  {
    "Name": "The Hanged Man",
    "Suit": "Major Arcana",
    "Number": 12,
    "Keyword": "Perspective",
    "Text": [
      "Seeing things from a unique point of view. Enduring difficulties for a worthy cause. A period of deep self examination. Passivity, acceptance of reality even if it is the opposite of what one expects.",
      {
        "Message": "Look at things from the opposite perspective."
      },
      {
        "Inverse": "Isolation. Emotional stance of a victim. Inability to act. Denying one’s own unique qualities, striving to be “normal” at all costs. Living in one’s private and imaginary reality."
      }
    ]
  },
  {
    "Name": "Death",
    "Suit": "Major Arcana",
    "Number": 13,
    "Keyword": "Ending",
    "Text": [
      "The end of something whose time has come. Cutting off past influences or attachment to dominant figures. Giving up the superfluous and keeping only the essential. Disintegration of the old makes room for the new.",
      {
        "Message": "Give up what is over."
      },
      {
        "Inverse": "Difficulty in coping with loss or change. Temporary difficulties, a trying challenge. Disintegration. Realization of a painful truth. Does not predict future death, but may reflect anxiety about dying or mourning over a loss which has already happened."
      }
    ]
  },
  {
    "Name": "Temperance",
    "Suit": "Major Arcana",
    "Number": 14,
    "Keyword": "Resolution",
    "Text": [
      "Reconciliation, compromise, relaxation of tensions. Integration of opposites. Ability to do the seemingly impossible. A slow process of distillation and improvement. Patience, perseverance. Self-improvement.",
      {
        "Message": "Find the golden mean."
      },
      {
        "Inverse": "Going back and forth without making real progress. Losing patience with a lengthy process. Emotional preoccupation with oneself, pushing away others who might come to help."
      }
    ]
  },
  {
    "Name": "The Devil",
    "Suit": "Major Arcana",
    "Number": 15,
    "Keyword": "Passion",
    "Text": [
      "A burst of creativity. Paradoxes and contradictions. Irony and mocking of common norms. Acting from desires, passions and impulses. Moving on from a past family trauma.",
      {
        "Message": "Express passion and desire."
      },
      {
        "Inverse": "Temptation, attraction to the dark and forbidden. Exploitation, egotism, domination. Compulsive self-gratification. Senseless behavior has its price. Difficulty in detaching oneself from an unhealthy bond."
      }
    ]
  },
  {
    "Name": "The Tower",
    "Suit": "Major Arcana",
    "Number": 16,
    "Keyword": "Disruption",
    "Text": [
      "Breaking up of solid structures. Getting free from confinement. Sudden breakthrough after long preparations. Sparkling sexual encounter. Success lies in simplicity and modesty.",
      {
        "Message": "Return to the solid ground of reality."
      },
      {
        "Inverse": "Shock, collapse of projects or trusted structures. A fall from an apparently solid and secure position. Chaos, confusion, difficulty in understanding what is going on. Vanity and pride lead to failure."
      }
    ]
  },
  {
    "Name": "The Star",
    "Suit": "Major Arcana",
    "Number": 17,
    "Keyword": "Light",
    "Text": [
      "Openness, simplicity, return to nature. Purity, honesty. Showing yourself “as you are,” accepting one’s body and desires. Generosity. Luck from heaven. Intuitive feeling of guidance or energy coming from a higher plane.",
      {
        "Message": "Flow from a pure source."
      },
      {
        "Inverse": "Naive optimism and wishful thinking. Exposing oneself to danger or abuse. Difficulty in setting proper boundaries. Squandering, wastefulness."
      }
    ]
  },
  {
    "Name": "The Moon",
    "Suit": "Major Arcana",
    "Number": 18,
    "Keyword": "Interiority",
    "Text": [
      "Deep emotions, perhaps related to a mother or feminine figure. A different experience of reality. Longing for the unreachable. Finding one’s hidden strengths. Occupation with the remote past. A hidden treasure.",
      {
        "Message": "Don’t be afraid to go deep down."
      },
      {
        "Inverse": "Vague and disturbing feelings. Emotional difficulties, a period of depression. Danger lurking under the surface. Retreat, the road ahead is hard to find."
      }
    ]
  },
  {
    "Name": "The Sun",
    "Suit": "Major Arcana",
    "Number": 19,
    "Keyword": "Warmth",
    "Text": [
      "Light and warmth, abundance, blessings. Pleasant feeling, emotional or physical healing. Partnership, trust, sharing, brotherhood. Human touch. An ideal father figure. Matters relating to children. Setting limits in a moderate and non-oppressive way.",
      {
        "Message": "Find suitable partners."
      },
      {
        "Inverse": "Living in a limited space, difficulty to face reality “in the open.” Immaturity, dependence on others. Someone or something too intense and energetic to feel comfortable with. An absent father."
      }
    ]
  },
  {
    "Name": "Judgement",
    "Suit": "Major Arcana",
    "Number": 20,
    "Keyword": "Revelation",
    "Text": [
      "Revelation, enlightenment, a new understanding. A turning point in a therapy process. Healing of a family relationship. Disclosure, secrets revealed, publicity. Birth of a baby or of a new thing.",
      {
        "Message": "Awaken to spiritual reality."
      },
      {
        "Inverse": "Revelation of something that should have been kept hidden. Lack of privacy. Unpleasant realization. Problems related to child-parent relations. Too much noise and drama."
      }
    ]
  },
  {
    "Name": "The World",
    "Suit": "Major Arcana",
    "Number": 21,
    "Keyword": "Fulfillment",
    "Text": [
      "Completion of a process. Balanced activity and achievements in various domains. Contact with far places. Harmony and correspondence between different planes. Pregnancy, something new is about to be born. The Dance of Life.",
      {
        "Message": "Everything is perfect as it is."
      },
      {
        "Inverse": "Life in a bubble, difficulty in sharing your world with others. Disconnection of inner feelings from external life. Preoccupation with oneself, idealized self-image, inability to move forward."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 1,
    "Keyword": "Promise",
    "Text": [
      "A good start in material things. Financial and physical stability. A practical perspective. A significant sum of money. Utilitarian approach. Greed. Something basic and unsophisticated.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 2,
    "Keyword": "Duality",
    "Text": [
      "Duality. Two options or two elements. Collaborating while keeping distance. A winding road, advancing in complex ways. Recognition and acknowledgment.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 3,
    "Keyword": "Product",
    "Text": [
      "Product. A partnership or an alliance bears fruit. First results of a project. Good prospects.",
      {
        "Inverse": "Disappointment, a partnership or a project does not bear the expected fruits."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 4,
    "Keyword": "Stability",
    "Text": [
      "Stability. Solid material assets. Tradition, reputation and honor. Time-tested reliability. Established social institutions.",
      {
        "Inverse": "Conservatism, clinging to old and outdated patterns."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 5,
    "Keyword": "Destabilization",
    "Text": [
      "Disruption. Something new appears and destabilizes existing structures. A new element gets attention, but also awakens resistance.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 6,
    "Keyword": "Expansion",
    "Text": [
      "Expansion. Abundance of resources and possible ways to advance. A positive outlook, success. A good balance between stability and movement.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 7,
    "Keyword": "Acceptance",
    "Text": [
      "Acceptance. Something new is well received. Help and protection. Integrating into a system without losing one’s individuality",
      {
        "Inverse": "Lack of independence, need to rely on help and acceptance from others."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 8,
    "Keyword": "Uniformity",
    "Text": [
      "Uniformity. A mechanical structure. Practical considerations prove efficient, but lack a human touch. Routine work. A slow and patient advance.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 9,
    "Keyword": "Motivation",
    "Text": [
      "Motivation. Carving a niche for oneself in an existing system. Ambition. Endurance and independent thinking bear long term fruits.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 10,
    "Keyword": "Abundance",
    "Text": [
      "Abundance. Intensive activity in practical affairs. Material success and achievements. Some may be getting more than others.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 11,
    "Keyword": "Foundation",
    "Text": [
      "A practical endeavor. Untapped potentials are within reach. Tangible success at the beginning. A solid material base for further advancement.",
      {
        "Inverse": "Hesitation, lack of clear purpose. Thinking in terms of past achievements misses present opportunities."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 12,
    "Keyword": "Advancement",
    "Text": [
      "Advancement in a practical direction. A productive expression of creativity. A clear goal in sight.",
      {
        "Inverse": "Constant pursuit of money, without reaching material stability. Passions and desires may interfere with practical plans."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 13,
    "Keyword": "Stewardship",
    "Text": [
      "Tangible assets, material and personal stability, a sober and realistic vision. Looking at things from a practical and pragmatic perspective.",
      {
        "Inverse": "Conservatism, resistance to change, aiming only to preserve the existing assets. Looking at things only from the material perspective."
      }
    ]
  },
  {
    "Suit": "Coins",
    "Number": 14,
    "Keyword": "Wealth",
    "Text": [
      "Confidence and security, a cautious but optimistic vision. Looking for new achievements while holding existing assets secure.",
      {
        "Inverse": "Dissatisfaction with what one already has. Disregard of the good things in the present situation. A limited outlook."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 1,
    "Keyword": "Yearning",
    "Text": [
      "The beginning of a love relationship. Expression of warm feelings. Romantic longing for something extraordinary. Emotional and spiritual growth.",
      {
        "Inverse": "Emotional dryness, feeling oneself empty. Avoidance of intimacy, negative feelings, heartbreak."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 2,
    "Keyword": "Partnership",
    "Text": [
      "Partnership. A romantic relationship or a close personal alliance. Interpersonal dynamics based on social norms. Passion in a love relationship, which may turn against itself.",
      {
        "Inverse": "A crisis in a couple relationship, disappointment with someone close to you."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 3,
    "Keyword": "Birth",
    "Text": [
      "Birth. Something new brings joy and happiness. Caring for a child. Issues of child-parent relations. A common project motivated by feelings and not only by interests.",
      {
        "Inverse": "Problems in relations with one’s parents, or with one’s child. A strong alliance of two persons leaves a third one outside."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 4,
    "Keyword": "Family",
    "Text": [
      "Family. A collective of people (family, community, etc.) with a history and a sense of belonging. Commitment to a group, at the price of giving up personal interests.",
      {
        "Inverse": "Problems and discord in the family or in a long-lasting community. A fixed social structure which doesn’t allow for adaptation or flexibility."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 5,
    "Keyword": "Links",
    "Text": [
      "Links. Popularity, relations with many people. Becoming the center of attention in a group. Relying on connections with other people to advance oneself or to overcome difficulties.",
      {
        "Inverse": "Excessive preoccupation with social activity. Losing oneself in multiple superficial connections. Cultivating virtual instead of real contacts."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 6,
    "Keyword": "Continuity",
    "Text": [
      "Continuity. A long-term relationship. Repetition between different generations in the family. A stable personal alliance.",
      {
        "Inverse": "Monotony, tedious repetition. Falling time and again into the same emotional traps."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 7,
    "Keyword": "Individuality",
    "Text": [
      "Individuality. A single person finding his place in a group. Contact with people in high positions. Exceptional qualities are appreciated.",
      {
        "Inverse": "Problems of integration in a group or an organization. Being part of a collective, but feeling isolated and estranged."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 8,
    "Keyword": "Involvement",
    "Text": [
      "Involvement. Developing personal relationships within a group. A favorable human-relations environment. A feast or a family event.",
      {
        "Inverse": "Interference of the environment in a couple’s relationships. Pressures from one’s family in romantic or personal matters."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 9,
    "Keyword": "Collectivity",
    "Text": [
      "Collectivity. A group or organization working harmoniously with everyone finding his proper place. Accepting one’s role in a social environment. Happiness, wishes coming true.",
      {
        "Inverse": "A confusing social situation, difficulty in situating oneself within a complex environment."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 10,
    "Keyword": "Leadership",
    "Text": [
      "Leadership. A person with special qualities receives appreciation and high status. Assuming responsibility for others. Maintaining a superior position.",
      {
        "Inverse": "A fallen leader, loss of popularity. Disappointment because of ingratitude by people one has helped."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 11,
    "Keyword": "Infatuation",
    "Text": [
      "First and unsure steps in a romantic endeavor. Shyness. Sincere intentions. Trying to figure out one’s feelings.",
      {
        "Inverse": "Over-absorption in one’s personal feelings, losing contact with others. Sloppiness in practical affairs."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 12,
    "Keyword": "Romance",
    "Text": [
      "A romantic gesture, offering one’s heart, courting. Openness, sincerity, a simple heart. A potential lover may appear.",
      {
        "Inverse": "Superficial and unstable feelings. An over-optimistic but unrealistic attitude. An overt display of shallow or insincere feelings."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 13,
    "Keyword": "Emotion",
    "Text": [
      "A rich inner world which is kept hidden. Guarding one’s privacy or valuable assets. Strong feelings held under control.",
      {
        "Inverse": "Closure, defensiveness. Distrust of others due to negative past experiences. Hiding one’s emotions under guise of rational criticism."
      }
    ]
  },
  {
    "Suit": "Cups",
    "Number": 14,
    "Keyword": "Optimism",
    "Text": [
      "Emotional maturity, optimism, ability to overcome past injuries and look ahead. Openness to new things, but with prudence and caution. Closing one’s ear to voices from the past.",
      {
        "Inverse": "Difficulty in overcoming an emotional blow. A pessimistic outlook caused by negative past experiences."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 1,
    "Keyword": "Inspiration",
    "Text": [
      "Creative momentum. Active sexuality. Strong impulses, energy and drive. Life force. Beginning of growth. Dispersing one’s efforts in different directions.",
      {
        "Inverse": "Lack of energy, restriction, repressed sexuality, a creative block."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 2,
    "Keyword": "Crossroads",
    "Text": [
      "Crossroads. Several options or ways to choose from. Every course offers benefits. A brief encounter with someone going his own way. Blocking an opponent’s line of advance.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 3,
    "Keyword": "Direction",
    "Text": [
      "Direction. Moving forward after a moment of hesitation. Finding a middle path between two courses of action. Gaining an advantage by keeping neutrality between two conflicting sides.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 4,
    "Keyword": "Stalemate",
    "Text": [
      "Stalemate. A temporary stop in order to prepare for future advancement. Tensions at present, but good prospects in the long run. Making a move now is in nobody’s interest.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 5,
    "Keyword": "Overcoming",
    "Text": [
      "Overcoming. Getting over a weak opposition. Breakdown of an equilibrium. Focusing on the main objective. An initiative to make a winning move.",
      {
        "Inverse": "Walking into a complex situation. Losing one’s edge."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 6,
    "Keyword": "Collaboration",
    "Text": [
      "Collaboration. A strong alliance between two parties with different goals but common present interests. A taste for luxury made possible by favorable conditions.",
      {
        "Inverse": "Excessive pursuit of luxury. Need to break up an alliance of opponents."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 7,
    "Keyword": "Struggle",
    "Text": [
      "Struggle. Someone putting up a fight against many opponents. Obstinacy, endurance, keeping one’s position in a conflict situation. A difficult combat with an uncertain outcome.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 8,
    "Keyword": "Regulation",
    "Text": [
      "Regulation. It is possible to advance only by following the rules. Occupation with short-term goals while losing the long-term perspective. A roadblock.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 9,
    "Keyword": "Interruption",
    "Text": [
      "Interruption. Difficulties and oppositions too hard to overcome. Giving up one’s projects to avoid conflict. Starting anew after a challenging period.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 10,
    "Keyword": "Loyalty",
    "Text": [
      "Loyalty. A partnership or an alliance endures hardships and succeeds in getting over them. Pure intentions and perseverance lead to success. Honoring one’s principles in spite of difficulties.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 11,
    "Keyword": "Anticipation",
    "Text": [
      "A creative potential which still needs processing. Keeping a safe distance from events and waiting for the right moment.",
      {
        "Inverse": "A task too heavy for the querent’s strength. Difficulty in controlling desires and urges. Immature approach to sexuality."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 12,
    "Keyword": "Diversion",
    "Text": [
      "A change of direction, following one’s urges and passions. A temporary stop, but there is still energy and a desire to advance.",
      {
        "Inverse": "Preoccupation with the satisfaction of one’s own desires. Problem in defining long-term goals. Submitting to temptation."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 13,
    "Keyword": "Maintenance",
    "Text": [
      "A feminine figure with a strong personality. Things connected with food and eating. Speaking softly while holding a big stick. A secure and well-defended position.",
      {
        "Inverse": "Intimidation, menace. Using sexuality as a means of control. Problems with a strong mother figure. Fear of feminine power."
      }
    ]
  },
  {
    "Suit": "Wands",
    "Number": 14,
    "Keyword": "Pursuit",
    "Text": [
      "A mature attitude to urges and desires. Controlled creativity. Prodding oneself to make a move forward. Investing present assets in future projects.",
      {
        "Inverse": "Plans to move forward are frustrated by self-defeating acts. Hesitation, conflicts, tendency to make things too heavy and complex."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 1,
    "Keyword": "Initiative",
    "Text": [
      "A planned initiative. Rational and logical thinking, sharpness of mind. A conclusive decision. Readiness to fight. Ambition, competitiveness. A victory with stable achievements.",
      {
        "Inverse": "Negative and unproductive thoughts. Misconceptions, delusions. Self-defeat. Injury."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 2,
    "Keyword": "Boundaries",
    "Text": [
      "Boundaries. Limits that protect and define something which is in development. Making full use of the present situation. Preparations for future advancement. A clear view encompassing the overall situation.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 3,
    "Keyword": "Victory",
    "Text": [
      "Victory. Overcoming a weak opposition. Cutting through a quandary and going forward in a clear direction. A third party intervenes and wins over two weakened opponents.",
      {
        "Inverse": "A failure, defeat from a weaker opponent. An unsuccessful attempt to make a decisive move."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 4,
    "Keyword": "Restriction",
    "Text": [
      "Restriction. A limited space for development and maneuver. Trying to push against constraints. Potentials to grow once the present limitations become less solid.",
      {
        "Inverse": "Confinement and blocking, lack of motivation or energy to break out of a limited situation."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 5,
    "Keyword": "Breakthrough",
    "Text": [
      "Breakthrough. A forward thrust overcoming the existing limits. Keeping up spirits in a tight situation. Doing things in one’s own way.",
      {
        "Inverse": "A failed initiative to change the situation. Stubbornness leading nowhere. Oppressing factors cannot be removed now."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 6,
    "Keyword": "Adaptation",
    "Text": [
      "Adaptation. Accepting limitations and adapting oneself to them. Respecting the present order. Compromising in order to make the best of the existing situation.",
      {
        "Inverse": "Resignation, surrender, giving up the ambition to change things for the better. Lack of fighting spirit."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 7,
    "Keyword": "Sharpness",
    "Text": [
      "Sharpness. A focused and determined attitude. Concentrating on a clear goal and doing what it takes to reach it. Winning a fight with the odds evenly balanced.",
      {
        "Inverse": "A narrow and over-concentrated vision. Investing one’s efforts and resources in a lost cause."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 8,
    "Keyword": "Defenses",
    "Text": [
      "Defenses. Putting up shields and blocks. Psychological defense mechanisms. A need to be in total control. A well-guarded treasure. Entering another’s domain with permission.",
      {
        "Inverse": "Similar."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 9,
    "Keyword": "Courage",
    "Text": [
      "Courage. Winning a fight against a superior force. Pure intentions. Putting imperfect means to good use.",
      {
        "Inverse": "Losing against a stronger opponent. Sloppiness, imperfect preparations for a challenge."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 10,
    "Keyword": "Exhaustion",
    "Text": [
      "Exhaustion. A complex situation with many conflicting interests. A long battle without a clear outcome. Need to find an ally who will attack the problem from a different direction.",
      {
        "Inverse": "Immobility. Impossible to move now. Feeling attacked from different sides. A painful and humiliating defeat."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 11,
    "Keyword": "Preparation",
    "Text": [
      "Preparation for a future challenge. Looking for a compromise between reason and strong desires. Hesitating to use one’s power.",
      {
        "Inverse": "Confusion, negative and inhibiting thoughts, self-defeat. Sloppy use of one’s own tools may cause damage."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 12,
    "Keyword": "Perseverance",
    "Text": [
      "Energy and resources to advance, still looking for the right direction. Hovering above practical constraints. Determination and perseverance.",
      {
        "Inverse": "Trying to force one’s misguided views, insisting on a wrong direction. Losing touch with the ground."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 13,
    "Keyword": "Fortification",
    "Text": [
      "A secure and protected position. Defending one’s territory. Preparation of something that shouldn’t be exposed yet.",
      {
        "Inverse": "Defensiveness and rigidity. Suspicion and fixed ideas block advancement and preclude new connections."
      }
    ]
  },
  {
    "Suit": "Swords",
    "Number": 14,
    "Keyword": "Revolution",
    "Text": [
      "A determination to break from the past, a strong will. Feeling equipped to deal with uncertainty. Wisdom and intellectual maturity.",
      {
        "Inverse": "A divided heart, a need to cut off from something to which one is still attached. Over-calculating in a vain attempt to overcome uncertainty."
      }
    ]
  }
]